// <auto-generated />
using System;
using System.Collections.Generic;
using API.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace API.Migrations
{
    [DbContext(typeof(APIDatabaseContext))]
    [Migration("20250720134344_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("API.Models.Ability", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Abilities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Participate in daily voting to lynch a suspect.",
                            Name = "Vote"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Can defend themselves against night attacks.",
                            Name = "Defense"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Choose one player to protect from death each night.",
                            Name = "Heal"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Choose one player to investigate each night and learn their role category.",
                            Name = "Investigate"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Choose one player to kill each night. Limited uses.",
                            Name = "Shoot"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Execute the Mafia's chosen target at night.",
                            Name = "Mafia Kill"
                        },
                        new
                        {
                            Id = 8,
                            Description = "Choose the Mafia's nightly target. Appears as Townie to investigators.",
                            Name = "Organize Kill"
                        },
                        new
                        {
                            Id = 9,
                            Description = "If lynched, you will kill one player who voted for you that night.",
                            Name = "Trick"
                        },
                        new
                        {
                            Id = 10,
                            Description = "Win if your assigned target is lynched. You are immune to night kills until your target dies.",
                            Name = "Target Elimination"
                        });
                });

            modelBuilder.Entity("API.Models.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<List<int>>("PlayersVisibleToPlayer")
                        .IsRequired()
                        .HasColumnType("integer[]");

                    b.Property<int?>("RoleId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Players");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Alice Townie",
                            PlayersVisibleToPlayer = new List<int>(),
                            RoleId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "John Doctor",
                            PlayersVisibleToPlayer = new List<int>(),
                            RoleId = 2
                        },
                        new
                        {
                            Id = 3,
                            Name = "Emily Investigator",
                            PlayersVisibleToPlayer = new List<int>(),
                            RoleId = 3
                        },
                        new
                        {
                            Id = 4,
                            Name = "Michael Vigilante",
                            PlayersVisibleToPlayer = new List<int>(),
                            RoleId = 4
                        },
                        new
                        {
                            Id = 5,
                            Name = "Sarah Mafioso",
                            PlayersVisibleToPlayer = new List<int>(),
                            RoleId = 5
                        },
                        new
                        {
                            Id = 6,
                            Name = "Jessica Godfather",
                            PlayersVisibleToPlayer = new List<int>(),
                            RoleId = 6
                        },
                        new
                        {
                            Id = 7,
                            Name = "David Jester",
                            PlayersVisibleToPlayer = new List<int>(),
                            RoleId = 7
                        },
                        new
                        {
                            Id = 8,
                            Name = "Ashley Executioner",
                            PlayersVisibleToPlayer = new List<int>(),
                            RoleId = 8
                        },
                        new
                        {
                            Id = 9,
                            Name = "Matthew Townie",
                            PlayersVisibleToPlayer = new List<int>(),
                            RoleId = 1
                        },
                        new
                        {
                            Id = 10,
                            Name = "Amanda Doctor",
                            PlayersVisibleToPlayer = new List<int>(),
                            RoleId = 2
                        },
                        new
                        {
                            Id = 11,
                            Name = "Joshua Investigator",
                            PlayersVisibleToPlayer = new List<int>(),
                            RoleId = 3
                        },
                        new
                        {
                            Id = 12,
                            Name = "Jennifer Vigilante",
                            PlayersVisibleToPlayer = new List<int>(),
                            RoleId = 4
                        },
                        new
                        {
                            Id = 13,
                            Name = "Daniel Mafioso",
                            PlayersVisibleToPlayer = new List<int>(),
                            RoleId = 5
                        },
                        new
                        {
                            Id = 14,
                            Name = "Elizabeth Godfather",
                            PlayersVisibleToPlayer = new List<int>(),
                            RoleId = 6
                        },
                        new
                        {
                            Id = 15,
                            Name = "James Jester",
                            PlayersVisibleToPlayer = new List<int>(),
                            RoleId = 7
                        },
                        new
                        {
                            Id = 16,
                            Name = "Charlie Executioner",
                            PlayersVisibleToPlayer = new List<int>(),
                            RoleId = 8
                        },
                        new
                        {
                            Id = 17,
                            Name = "Kyle Townie",
                            PlayersVisibleToPlayer = new List<int>(),
                            RoleId = 1
                        },
                        new
                        {
                            Id = 18,
                            Name = "Bob Doctor",
                            PlayersVisibleToPlayer = new List<int>(),
                            RoleId = 2
                        },
                        new
                        {
                            Id = 19,
                            Name = "Megan Investigator",
                            PlayersVisibleToPlayer = new List<int>(),
                            RoleId = 3
                        },
                        new
                        {
                            Id = 20,
                            Name = "Laura Vigilante",
                            PlayersVisibleToPlayer = new List<int>(),
                            RoleId = 4
                        });
                });

            modelBuilder.Entity("API.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int[]>("RolesVisibleToRole")
                        .IsRequired()
                        .HasColumnType("integer[]");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "A regular citizen of the town. Your goal is to eliminate all threats.",
                            Name = "Townie",
                            RolesVisibleToRole = new int[0]
                        },
                        new
                        {
                            Id = 2,
                            Description = "You are a medical professional dedicated to saving lives.",
                            Name = "Doctor",
                            RolesVisibleToRole = new int[0]
                        },
                        new
                        {
                            Id = 3,
                            Description = "You seek the truth and uncover secrets hidden in the town.",
                            Name = "Investigator",
                            RolesVisibleToRole = new int[0]
                        },
                        new
                        {
                            Id = 4,
                            Description = "You take justice into your own hands, even if it means getting your hands dirty.",
                            Name = "Vigilante",
                            RolesVisibleToRole = new int[0]
                        },
                        new
                        {
                            Id = 5,
                            Description = "A loyal member of the Mafia. You carry out the family's nightly kills.",
                            Name = "Mafioso",
                            RolesVisibleToRole = new[] { 6, 5 }
                        },
                        new
                        {
                            Id = 6,
                            Description = "The cunning leader of the Mafia. You are immune to basic investigations.",
                            Name = "Godfather",
                            RolesVisibleToRole = new[] { 6, 5 }
                        },
                        new
                        {
                            Id = 7,
                            Description = "Your only goal is to be lynched by the town.",
                            Name = "Jester",
                            RolesVisibleToRole = new int[0]
                        },
                        new
                        {
                            Id = 8,
                            Description = "You have a specific target you must get lynched to win.",
                            Name = "Executioner",
                            RolesVisibleToRole = new int[0]
                        });
                });

            modelBuilder.Entity("API.Models.RoleAbility", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.Property<int>("AbilityId")
                        .HasColumnType("integer");

                    b.HasKey("RoleId", "AbilityId");

                    b.HasIndex("AbilityId");

                    b.ToTable("RoleAbilityAssociations");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            AbilityId = 1
                        },
                        new
                        {
                            RoleId = 2,
                            AbilityId = 1
                        },
                        new
                        {
                            RoleId = 2,
                            AbilityId = 4
                        },
                        new
                        {
                            RoleId = 3,
                            AbilityId = 1
                        },
                        new
                        {
                            RoleId = 3,
                            AbilityId = 5
                        },
                        new
                        {
                            RoleId = 4,
                            AbilityId = 1
                        },
                        new
                        {
                            RoleId = 4,
                            AbilityId = 6
                        },
                        new
                        {
                            RoleId = 5,
                            AbilityId = 1
                        },
                        new
                        {
                            RoleId = 5,
                            AbilityId = 7
                        },
                        new
                        {
                            RoleId = 6,
                            AbilityId = 1
                        },
                        new
                        {
                            RoleId = 6,
                            AbilityId = 8
                        },
                        new
                        {
                            RoleId = 6,
                            AbilityId = 3
                        },
                        new
                        {
                            RoleId = 7,
                            AbilityId = 1
                        },
                        new
                        {
                            RoleId = 7,
                            AbilityId = 9
                        },
                        new
                        {
                            RoleId = 8,
                            AbilityId = 1
                        },
                        new
                        {
                            RoleId = 8,
                            AbilityId = 10
                        });
                });

            modelBuilder.Entity("API.Models.Player", b =>
                {
                    b.HasOne("API.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("API.Models.RoleAbility", b =>
                {
                    b.HasOne("API.Models.Ability", "Ability")
                        .WithMany("RoleAssociations")
                        .HasForeignKey("AbilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Models.Role", "Role")
                        .WithMany("AbilityAssociations")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ability");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("API.Models.Ability", b =>
                {
                    b.Navigation("RoleAssociations");
                });

            modelBuilder.Entity("API.Models.Role", b =>
                {
                    b.Navigation("AbilityAssociations");
                });
#pragma warning restore 612, 618
        }
    }
}
