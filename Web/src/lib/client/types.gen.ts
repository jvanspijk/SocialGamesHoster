// This file is auto-generated by @hey-api/openapi-ts

export type ClientOptions = {
    baseUrl: 'http://localhost:9090/' | (string & {});
};

export type AbilityInfo = {
    id?: number;
    name?: string;
    description?: string;
};

/**
 * Request for AddWinners
 */
export type AddWinnersRequest = {
    playerIds?: Array<number>;
};

/**
 * Response for AddWinners
 */
export type AddWinnersResponse = {
    id: number;
    winners: Array<Participant>;
};

/**
 * Request for AdminLogin
 */
export type AdminLoginRequest = {
    username?: string;
    passwordHash?: string;
};

/**
 * Response for AdminLogin
 */
export type AdminLoginResponse = {
    token?: string;
};

/**
 * Request for CreateAbility
 */
export type CreateAbilityRequest = {
    name?: string;
    description?: string;
};

/**
 * Request for CreateGameSession
 */
export type CreateGameSessionRequest = {
    rulesetId?: number;
    playerNames?: Array<string>;
};

/**
 * Response for CreateGameSession
 */
export type CreateGameSessionResponse = {
    id: number;
    rulesetId: number;
};

/**
 * Request for CreatePlayer
 */
export type CreatePlayerRequest = {
    name?: string;
};

/**
 * Request for CreateRole
 */
export type CreateRoleRequest2 = {
    name?: string;
    description?: string | null;
};

/**
 * Request for DuplicateGameSession
 */
export type DuplicateGameSessionRequest2 = {
    gameSessionId: number;
};

/**
 * Response for GetAbilitiesFromRuleset
 */
export type GetAbilitiesFromRulesetResponse = {
    id: number;
    name: string;
    description: string;
};

/**
 * Response for GetAbility
 */
export type GetAbilityResponse = {
    id: number;
    name: string;
    description: string;
};

/**
 * Response for GetActiveGameSessions
 */
export type GetActiveGameSessionsResponse = {
    id: number;
    rulesetId: number;
    status: string;
    currentRoundNumber: number;
};

/**
 * Response for GetAllGameSessions
 */
export type GetAllGameSessionsResponse = {
    id: number;
    rulesetName: string;
    participantIds: Array<number>;
    status: string;
};

/**
 * Response for GetAllRulesets
 */
export type GetAllRulesetsResponse = {
    id: number;
    name: string;
    description: string;
};

/**
 * Response for GetCurrentRound
 */
export type GetCurrentRoundResponse = {
    id: number;
    startTime: string | null;
    isFinished: boolean;
    remainingSeconds?: number;
};

/**
 * Response for GetGameSession
 */
export type GetGameSessionResponse = {
    id: number;
    rulesetId: number;
    status: string;
};

/**
 * Response for GetPlayerFromGame
 */
export type GetPlayerFromGameResponse = {
    id: number;
    name: string;
    role: NullableOfRoleInfo;
};

/**
 * Response for GetPlayer
 */
export type GetPlayerResponse = {
    id: number;
    name: string;
    role: NullableOfRoleInfo;
};

/**
 * Response for GetPlayersFromGame
 */
export type GetPlayersFromGameResponse2 = {
    id: number;
    name: string;
};

/**
 * Response for GetRole
 */
export type GetRoleResponse = {
    id: number;
    name: string;
    description: string;
    abilities: Array<AbilityInfo>;
};

/**
 * Response for GetRoles
 */
export type GetRolesResponse = {
    id: number;
    name: string;
    description: string;
};

/**
 * Response for GetRuleset
 */
export type GetRulesetResponse = {
    id: number;
    name: string;
    description: string;
};

export type HttpValidationProblemDetails = {
    type?: string | null;
    title?: string | null;
    status?: number | null;
    detail?: string | null;
    instance?: string | null;
    errors?: {
        [key: string]: Array<string>;
    };
};

export type NullableOfRoleInfo = {
    id?: number;
    name?: string;
    description?: string;
    abilities?: Array<AbilityInfo>;
} | null;

export type NullableOfRoleInfo2 = {
    id?: number;
    name?: string;
} | null;

export type Participant = {
    id?: number;
    name?: string;
    role?: NullableOfRoleInfo2;
};

/**
 * Request for PlayerLogin
 */
export type PlayerLoginRequest = {
    playerId?: number;
    ipAddress?: string;
};

/**
 * Response for PlayerLogin
 */
export type PlayerLoginResponse = {
    token?: string;
};

export type ProblemDetails = {
    type?: string | null;
    title?: string | null;
    status?: number | null;
    detail?: string | null;
    instance?: string | null;
};

/**
 * Response for StartGameSession
 */
export type StartGameSessionResponse = {
    id: number;
    status: string;
};

/**
 * Request for StartNewRound
 */
export type StartNewRoundRequest = {
    durationInSeconds?: number;
};

/**
 * Request for UpdateAbilityInformation
 */
export type UpdateAbilityInformationRequest = {
    newName?: string | null;
    newDescription?: string | null;
};

/**
 * Response for UpdateAbilityInformation
 */
export type UpdateAbilityInformationResponse = {
    id: number;
    name: string;
    description: string;
};

/**
 * Request for UpdateGameParticipants
 */
export type UpdateGameParticipantsRequest = {
    participantIds?: Array<number>;
};

/**
 * Response for UpdateGameParticipants
 */
export type UpdateGameParticipantsResponse = {
    id: number;
    participants: Array<Participant>;
};

/**
 * Request for UpdateGameRuleset
 */
export type UpdateGameRulesetRequest = {
    rulesetId?: number;
};

/**
 * Response for UpdateGameRuleset
 */
export type UpdateGameRulesetResponse = {
    id: number;
    rulesetId: number;
};

/**
 * Request for UpdatePlayer
 */
export type UpdatePlayerRequest2 = {
    newName?: string | null;
    newRoleId?: number | null;
};

/**
 * Response for UpdatePlayer
 */
export type UpdatePlayerResponse2 = {
    id: number;
    name: string;
    role: NullableOfRoleInfo;
};

/**
 * Request for UpdateRoleAbilities
 */
export type UpdateRoleAbilitiesRequest = {
    abilityIds?: Array<number>;
};

/**
 * Response for UpdateRoleAbilities
 */
export type UpdateRoleAbilitiesResponse = {
    id: number;
    abilities: Array<AbilityInfo>;
};

/**
 * Request for UpdateRoleInformation
 */
export type UpdateRoleInformationRequest = {
    name?: string | null;
    description?: string | null;
};

/**
 * Response for UpdateRoleInformation
 */
export type UpdateRoleInformationResponse = {
    id: number;
    name: string;
    description: string;
};

export type GetRoleData = {
    body?: never;
    path: {
        id: number;
    };
    query?: never;
    url: '/api/roles/{id}';
};

export type GetRoleErrors = {
    /**
     * Not Found
     */
    404: ProblemDetails;
};

export type GetRoleError = GetRoleErrors[keyof GetRoleErrors];

export type GetRoleResponses = {
    /**
     * OK
     */
    200: GetRoleResponse;
};

export type GetRoleResponse2 = GetRoleResponses[keyof GetRoleResponses];

export type UpdateRoleInformationData = {
    body: UpdateRoleInformationRequest;
    path: {
        id: number;
    };
    query?: never;
    url: '/api/roles/{id}';
};

export type UpdateRoleInformationErrors = {
    /**
     * Not Found
     */
    404: ProblemDetails;
};

export type UpdateRoleInformationError = UpdateRoleInformationErrors[keyof UpdateRoleInformationErrors];

export type UpdateRoleInformationResponses = {
    /**
     * OK
     */
    200: UpdateRoleInformationResponse;
};

export type UpdateRoleInformationResponse2 = UpdateRoleInformationResponses[keyof UpdateRoleInformationResponses];

export type UpdateRoleAbilitiesData = {
    body: UpdateRoleAbilitiesRequest;
    path: {
        id: number;
    };
    query?: never;
    url: '/api/roles/{id}/abilities';
};

export type UpdateRoleAbilitiesErrors = {
    /**
     * Not Found
     */
    404: ProblemDetails;
};

export type UpdateRoleAbilitiesError = UpdateRoleAbilitiesErrors[keyof UpdateRoleAbilitiesErrors];

export type UpdateRoleAbilitiesResponses = {
    /**
     * OK
     */
    200: UpdateRoleAbilitiesResponse;
};

export type UpdateRoleAbilitiesResponse2 = UpdateRoleAbilitiesResponses[keyof UpdateRoleAbilitiesResponses];

export type GetAbilityData = {
    body?: never;
    path: {
        id: number;
    };
    query?: never;
    url: '/api/abilities/{id}';
};

export type GetAbilityErrors = {
    /**
     * Not Found
     */
    404: ProblemDetails;
};

export type GetAbilityError = GetAbilityErrors[keyof GetAbilityErrors];

export type GetAbilityResponses = {
    /**
     * OK
     */
    200: GetAbilityResponse;
};

export type GetAbilityResponse2 = GetAbilityResponses[keyof GetAbilityResponses];

export type UpdateAbilityInformationData = {
    body: UpdateAbilityInformationRequest;
    path: {
        id: number;
    };
    query?: never;
    url: '/api/abilities/{id}';
};

export type UpdateAbilityInformationErrors = {
    /**
     * Not Found
     */
    404: ProblemDetails;
};

export type UpdateAbilityInformationError = UpdateAbilityInformationErrors[keyof UpdateAbilityInformationErrors];

export type UpdateAbilityInformationResponses = {
    /**
     * OK
     */
    200: UpdateAbilityInformationResponse;
};

export type UpdateAbilityInformationResponse2 = UpdateAbilityInformationResponses[keyof UpdateAbilityInformationResponses];

export type DeletePlayerData = {
    body?: never;
    path: {
        id: number;
    };
    query?: never;
    url: '/api/players/{id}';
};

export type DeletePlayerErrors = {
    /**
     * Not Found
     */
    404: ProblemDetails;
};

export type DeletePlayerError = DeletePlayerErrors[keyof DeletePlayerErrors];

export type DeletePlayerResponses = {
    /**
     * No Content
     */
    204: void;
};

export type DeletePlayerResponse = DeletePlayerResponses[keyof DeletePlayerResponses];

export type GetPlayerByIdData = {
    body?: never;
    path: {
        id: number;
    };
    query?: never;
    url: '/api/players/{id}';
};

export type GetPlayerByIdErrors = {
    /**
     * Not Found
     */
    404: ProblemDetails;
};

export type GetPlayerByIdError = GetPlayerByIdErrors[keyof GetPlayerByIdErrors];

export type GetPlayerByIdResponses = {
    /**
     * OK
     */
    200: GetPlayerResponse;
};

export type GetPlayerByIdResponse = GetPlayerByIdResponses[keyof GetPlayerByIdResponses];

export type UpdatePlayerData = {
    body: UpdatePlayerRequest2;
    path: {
        id: number;
    };
    query?: never;
    url: '/api/players/{id}';
};

export type UpdatePlayerErrors = {
    /**
     * Not Found
     */
    404: ProblemDetails;
};

export type UpdatePlayerError = UpdatePlayerErrors[keyof UpdatePlayerErrors];

export type UpdatePlayerResponses = {
    /**
     * OK
     */
    200: UpdatePlayerResponse2;
};

export type UpdatePlayerResponse = UpdatePlayerResponses[keyof UpdatePlayerResponses];

export type GetAllGamesData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/games';
};

export type GetAllGamesResponses = {
    /**
     * OK
     */
    200: Array<GetAllGameSessionsResponse>;
};

export type GetAllGamesResponse = GetAllGamesResponses[keyof GetAllGamesResponses];

export type CreateGameSessionData = {
    body: CreateGameSessionRequest;
    path?: never;
    query?: never;
    url: '/api/games';
};

export type CreateGameSessionResponses = {
    /**
     * OK
     */
    200: CreateGameSessionResponse;
};

export type CreateGameSessionResponse2 = CreateGameSessionResponses[keyof CreateGameSessionResponses];

export type GetActiveGamesData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/games/active';
};

export type GetActiveGamesErrors = {
    /**
     * Not Found
     */
    404: ProblemDetails;
};

export type GetActiveGamesError = GetActiveGamesErrors[keyof GetActiveGamesErrors];

export type GetActiveGamesResponses = {
    /**
     * OK
     */
    200: GetActiveGameSessionsResponse;
};

export type GetActiveGamesResponse = GetActiveGamesResponses[keyof GetActiveGamesResponses];

export type DuplicateGameSessionData = {
    body: DuplicateGameSessionRequest2;
    path?: never;
    query?: never;
    url: '/api/games/duplicate';
};

export type DuplicateGameSessionErrors = {
    /**
     * Not Found
     */
    404: ProblemDetails;
};

export type DuplicateGameSessionError = DuplicateGameSessionErrors[keyof DuplicateGameSessionErrors];

export type GetAllRulesetsData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api';
};

export type GetAllRulesetsResponses = {
    /**
     * OK
     */
    200: Array<GetAllRulesetsResponse>;
};

export type GetAllRulesetsResponse2 = GetAllRulesetsResponses[keyof GetAllRulesetsResponses];

export type AdminLoginData = {
    body: AdminLoginRequest;
    path?: never;
    query?: never;
    url: '/api/admin/login';
};

export type AdminLoginErrors = {
    /**
     * Unauthorized
     */
    401: unknown;
};

export type AdminLoginResponses = {
    /**
     * OK
     */
    200: AdminLoginResponse;
};

export type AdminLoginResponse2 = AdminLoginResponses[keyof AdminLoginResponses];

export type GetApiHealthData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/health';
};

export type GetApiHealthResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type GetGameSessionByIdData = {
    body?: never;
    path: {
        gameId: number;
    };
    query?: never;
    url: '/api/games/{gameId}';
};

export type GetGameSessionByIdErrors = {
    /**
     * Not Found
     */
    404: ProblemDetails;
};

export type GetGameSessionByIdError = GetGameSessionByIdErrors[keyof GetGameSessionByIdErrors];

export type GetGameSessionByIdResponses = {
    /**
     * OK
     */
    200: GetGameSessionResponse;
};

export type GetGameSessionByIdResponse = GetGameSessionByIdResponses[keyof GetGameSessionByIdResponses];

export type GetGamePlayersData = {
    body?: never;
    path: {
        gameId: number;
    };
    query?: never;
    url: '/api/games/{gameId}/players';
};

export type GetGamePlayersErrors = {
    /**
     * Not Found
     */
    404: ProblemDetails;
};

export type GetGamePlayersError = GetGamePlayersErrors[keyof GetGamePlayersErrors];

export type GetGamePlayersResponses = {
    /**
     * OK
     */
    200: Array<GetPlayersFromGameResponse2>;
};

export type GetGamePlayersResponse = GetGamePlayersResponses[keyof GetGamePlayersResponses];

export type UpdateGameParticipantsData = {
    body: UpdateGameParticipantsRequest;
    path: {
        gameId: number;
    };
    query?: never;
    url: '/api/games/{gameId}/players';
};

export type UpdateGameParticipantsErrors = {
    /**
     * Bad Request
     */
    400: ProblemDetails;
    /**
     * Not Found
     */
    404: ProblemDetails;
};

export type UpdateGameParticipantsError = UpdateGameParticipantsErrors[keyof UpdateGameParticipantsErrors];

export type UpdateGameParticipantsResponses = {
    /**
     * OK
     */
    200: UpdateGameParticipantsResponse;
};

export type UpdateGameParticipantsResponse2 = UpdateGameParticipantsResponses[keyof UpdateGameParticipantsResponses];

export type CreatePlayerData = {
    body: CreatePlayerRequest;
    path: {
        gameId: number;
    };
    query?: never;
    url: '/api/games/{gameId}/players';
};

export type CreatePlayerErrors = {
    /**
     * Bad Request
     */
    400: HttpValidationProblemDetails;
};

export type CreatePlayerError = CreatePlayerErrors[keyof CreatePlayerErrors];

export type UpdateGameRulesetData = {
    body: UpdateGameRulesetRequest;
    path: {
        gameId: number;
    };
    query?: never;
    url: '/api/games/{gameId}/ruleset';
};

export type UpdateGameRulesetErrors = {
    /**
     * Bad Request
     */
    400: ProblemDetails;
    /**
     * Not Found
     */
    404: ProblemDetails;
};

export type UpdateGameRulesetError = UpdateGameRulesetErrors[keyof UpdateGameRulesetErrors];

export type UpdateGameRulesetResponses = {
    /**
     * OK
     */
    200: UpdateGameRulesetResponse;
};

export type UpdateGameRulesetResponse2 = UpdateGameRulesetResponses[keyof UpdateGameRulesetResponses];

export type AddGameWinnerData = {
    body: AddWinnersRequest;
    path: {
        gameId: number;
    };
    query?: never;
    url: '/api/games/{gameId}/winners/add';
};

export type AddGameWinnerErrors = {
    /**
     * Bad Request
     */
    400: ProblemDetails;
    /**
     * Not Found
     */
    404: ProblemDetails;
};

export type AddGameWinnerError = AddGameWinnerErrors[keyof AddGameWinnerErrors];

export type AddGameWinnerResponses = {
    /**
     * OK
     */
    200: AddWinnersResponse;
};

export type AddGameWinnerResponse = AddGameWinnerResponses[keyof AddGameWinnerResponses];

export type PlayerLoginData = {
    body: PlayerLoginRequest;
    path: {
        gameId: number;
    };
    query?: never;
    url: '/api/games/{gameId}/login';
};

export type PlayerLoginErrors = {
    /**
     * Bad Request
     */
    400: ProblemDetails;
    /**
     * Not Found
     */
    404: ProblemDetails;
};

export type PlayerLoginError = PlayerLoginErrors[keyof PlayerLoginErrors];

export type PlayerLoginResponses = {
    /**
     * OK
     */
    200: PlayerLoginResponse;
};

export type PlayerLoginResponse2 = PlayerLoginResponses[keyof PlayerLoginResponses];

export type StartNewGameSessionData = {
    body?: never;
    path: {
        gameId: number;
    };
    query?: never;
    url: '/api/games/{gameId}/start';
};

export type StartNewGameSessionErrors = {
    /**
     * Bad Request
     */
    400: ProblemDetails;
    /**
     * Not Found
     */
    404: ProblemDetails;
};

export type StartNewGameSessionError = StartNewGameSessionErrors[keyof StartNewGameSessionErrors];

export type StartNewGameSessionResponses = {
    /**
     * OK
     */
    200: StartGameSessionResponse;
};

export type StartNewGameSessionResponse = StartNewGameSessionResponses[keyof StartNewGameSessionResponses];

export type FinishGameSessionData = {
    body?: never;
    path: {
        gameId: number;
    };
    query?: never;
    url: '/api/games/{gameId}/finish';
};

export type FinishGameSessionErrors = {
    /**
     * Not Found
     */
    404: ProblemDetails;
};

export type FinishGameSessionError = FinishGameSessionErrors[keyof FinishGameSessionErrors];

export type FinishGameSessionResponses = {
    /**
     * No Content
     */
    204: void;
};

export type FinishGameSessionResponse = FinishGameSessionResponses[keyof FinishGameSessionResponses];

export type CancelGameSessionData = {
    body?: never;
    path: {
        gameId: number;
    };
    query?: never;
    url: '/api/games/{gameId}/cancel';
};

export type CancelGameSessionErrors = {
    /**
     * Not Found
     */
    404: ProblemDetails;
};

export type CancelGameSessionError = CancelGameSessionErrors[keyof CancelGameSessionErrors];

export type CancelGameSessionResponses = {
    /**
     * No Content
     */
    204: void;
};

export type CancelGameSessionResponse = CancelGameSessionResponses[keyof CancelGameSessionResponses];

export type GetPlayerFromGameData = {
    body?: never;
    path: {
        playerId: number;
    };
    query?: never;
    url: '/api/games/{gameId}/players/{playerId}';
};

export type GetPlayerFromGameErrors = {
    /**
     * Not Found
     */
    404: ProblemDetails;
};

export type GetPlayerFromGameError = GetPlayerFromGameErrors[keyof GetPlayerFromGameErrors];

export type GetPlayerFromGameResponses = {
    /**
     * OK
     */
    200: GetPlayerFromGameResponse;
};

export type GetPlayerFromGameResponse2 = GetPlayerFromGameResponses[keyof GetPlayerFromGameResponses];

export type GetCurrentRoundData = {
    body?: never;
    path: {
        gameId: number;
    };
    query?: never;
    url: '/api/games/{gameId}/rounds/current';
};

export type GetCurrentRoundErrors = {
    /**
     * Not Found
     */
    404: ProblemDetails;
};

export type GetCurrentRoundError = GetCurrentRoundErrors[keyof GetCurrentRoundErrors];

export type GetCurrentRoundResponses = {
    /**
     * OK
     */
    200: GetCurrentRoundResponse;
};

export type GetCurrentRoundResponse2 = GetCurrentRoundResponses[keyof GetCurrentRoundResponses];

export type AdjustRoundTimeData = {
    body?: never;
    path: {
        gameId: number;
    };
    query: {
        deltaSeconds: number;
    };
    url: '/api/games/{gameId}/rounds/current/time';
};

export type AdjustRoundTimeErrors = {
    /**
     * Bad Request
     */
    400: ProblemDetails;
    /**
     * Not Found
     */
    404: ProblemDetails;
};

export type AdjustRoundTimeError = AdjustRoundTimeErrors[keyof AdjustRoundTimeErrors];

export type AdjustRoundTimeResponses = {
    /**
     * OK
     */
    200: string;
};

export type AdjustRoundTimeResponse = AdjustRoundTimeResponses[keyof AdjustRoundTimeResponses];

export type PauseCurrentRoundData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/games/{gameId}/rounds/current/pause';
};

export type PauseCurrentRoundErrors = {
    /**
     * Bad Request
     */
    400: ProblemDetails;
};

export type PauseCurrentRoundError = PauseCurrentRoundErrors[keyof PauseCurrentRoundErrors];

export type PauseCurrentRoundResponses = {
    /**
     * OK
     */
    200: string;
};

export type PauseCurrentRoundResponse = PauseCurrentRoundResponses[keyof PauseCurrentRoundResponses];

export type ResumeCurrentRoundData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/games/{gameId}/rounds/current/resume';
};

export type ResumeCurrentRoundErrors = {
    /**
     * Bad Request
     */
    400: ProblemDetails;
};

export type ResumeCurrentRoundError = ResumeCurrentRoundErrors[keyof ResumeCurrentRoundErrors];

export type ResumeCurrentRoundResponses = {
    /**
     * OK
     */
    200: string;
};

export type ResumeCurrentRoundResponse = ResumeCurrentRoundResponses[keyof ResumeCurrentRoundResponses];

export type CancelRoundData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/games/{gameId}/rounds/current/cancel';
};

export type CancelRoundErrors = {
    /**
     * Bad Request
     */
    400: ProblemDetails;
    /**
     * Not Found
     */
    404: ProblemDetails;
};

export type CancelRoundError = CancelRoundErrors[keyof CancelRoundErrors];

export type CancelRoundResponses = {
    /**
     * No Content
     */
    204: void;
};

export type CancelRoundResponse = CancelRoundResponses[keyof CancelRoundResponses];

export type FinishRoundData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/games/{gameId}/rounds/current/finish';
};

export type FinishRoundErrors = {
    /**
     * Bad Request
     */
    400: ProblemDetails;
    /**
     * Not Found
     */
    404: ProblemDetails;
};

export type FinishRoundError = FinishRoundErrors[keyof FinishRoundErrors];

export type FinishRoundResponses = {
    /**
     * No Content
     */
    204: void;
};

export type FinishRoundResponse = FinishRoundResponses[keyof FinishRoundResponses];

export type StartNewRoundData = {
    body: StartNewRoundRequest;
    path: {
        gameId: number;
    };
    query?: never;
    url: '/api/games/{gameId}/rounds';
};

export type StartNewRoundErrors = {
    /**
     * Not Found
     */
    404: ProblemDetails;
};

export type StartNewRoundError = StartNewRoundErrors[keyof StartNewRoundErrors];

export type GetRulesetByIdData = {
    body?: never;
    path: {
        rulesetId: number;
    };
    query?: never;
    url: '/api/rulesets/{rulesetId}';
};

export type GetRulesetByIdErrors = {
    /**
     * Not Found
     */
    404: ProblemDetails;
};

export type GetRulesetByIdError = GetRulesetByIdErrors[keyof GetRulesetByIdErrors];

export type GetRulesetByIdResponses = {
    /**
     * OK
     */
    200: GetRulesetResponse;
};

export type GetRulesetByIdResponse = GetRulesetByIdResponses[keyof GetRulesetByIdResponses];

export type GetRulesetAbilitiesData = {
    body?: never;
    path: {
        rulesetId: number;
    };
    query?: never;
    url: '/api/rulesets/{rulesetId}/abilties';
};

export type GetRulesetAbilitiesErrors = {
    /**
     * Not Found
     */
    404: ProblemDetails;
};

export type GetRulesetAbilitiesError = GetRulesetAbilitiesErrors[keyof GetRulesetAbilitiesErrors];

export type GetRulesetAbilitiesResponses = {
    /**
     * OK
     */
    200: Array<GetAbilitiesFromRulesetResponse>;
};

export type GetRulesetAbilitiesResponse = GetRulesetAbilitiesResponses[keyof GetRulesetAbilitiesResponses];

export type CreateAbilityData = {
    body: CreateAbilityRequest;
    path: {
        rulesetId: number;
    };
    query?: never;
    url: '/api/rulesets/{rulesetId}/abilties';
};

export type CreateAbilityResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type GetRulesetRolesData = {
    body?: never;
    path: {
        rulesetId: number;
    };
    query?: never;
    url: '/api/rulesets/{rulesetId}/roles';
};

export type GetRulesetRolesResponses = {
    /**
     * OK
     */
    200: Array<GetRolesResponse>;
};

export type GetRulesetRolesResponse = GetRulesetRolesResponses[keyof GetRulesetRolesResponses];

export type CreateRoleData = {
    body: CreateRoleRequest2;
    path: {
        rulesetId: number;
    };
    query?: never;
    url: '/api/rulesets/{rulesetId}/roles';
};

export type CreateRoleResponses = {
    /**
     * OK
     */
    200: unknown;
};
